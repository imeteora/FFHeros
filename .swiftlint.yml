whitelist_rules: # rule identifiers to exclude from running
  - trailing_whitespace
  - vertical_whitespace
  - comma # Comma Spacing
  - colon # Colon should next to identifier
  - attributes
  - conditional_returns_on_newline
  # - explicit_type_interface
  - force_cast
  - force_try
  - force_unwrapping
  - implicitly_unwrapped_optional
  - leading_whitespace
  - mark
  - trailing_newline
  - todo
  - closing_brace
  - trailing_semicolon
  - return_arrow_whitespace
  # - redundant_nil_coalesing
  - operator_whitespace
  - opening_brace
  - legacy_constructor
  - legacy_constant
  - legacy_cggeometry_functions
  - control_statement
  - empty_count
  - closure_end_indentation
  - closure_parameter_position
  - closure_spacing
  - compiler_protocol_init
  - discouraged_direct_init
  - discouraged_optional_boolean
  - empty_parameters
  - empty_parentheses_with_trailing_closure
  # - no_extension_access_modifier
  # - class_delegate_protocol
  # - contains_over_first_not_nil
  # - empty_enum_arguments
  - custom_rules

included:
  - Foundations/

excluded:
  - Foundations/gbUtils/Utils/Secure/

line_length: 120

custom_rules:
  line_break_after_super:
    name: "[Coding Style]"
    regex: '^\ *super\.[^\n]*\n\ *(?!(?:\}))[^\ \n]+'
    message: "An empty line after `super.someMethod()` is preferred."
    severity: warning
  line_break_before_return:
    name: "[Coding Style]"
    regex: '[A-Za-z0-9):{]\n\ *return'
    message: "Missing a line break before `return`."
    severity: warning
  # line_break_before_after_return:
  #   name: "[Coding Style]"
  #   regex: '(?=^.{121,}$)(\ *)([^\n]*\{)\ *(return\ .*)\}(\n)'
  #   message: "Missing a line break before and after `return` for a long line."
  #   severity: warning
  too_many_line_breaks:
    name: "[Coding Style]"
    regex: '(?:\ *\n){3,}'
    message: "Too many line breaks."
    severity: warning